low_income_high_asthma <- all_data_geo %>% mutate(high_asthma = ifelse(total_rate > asthma_quartile_rates[4], 1, 0),
low_income = ifelse(med_hh_income < quantile_income[2], 1, 0),
low_income_high_asthma_value = high_asthma*low_income)
low_income_high_asthma_map <- tm_shape(low_income_high_asthma) +
tm_polygons(col = "low_income_high_asthma_value", id = "name", palette = "BuPu", style = "pretty",
border.col = "white", border.alpha = 0.5) +
tm_shape(low_income_high_asthma) + tm_borders(col = "black") +
tm_layout(panel.show = T, panel.labels = "Counties with High Asthma Rates and Low Median HH Income", legend.show = F)
## Map low income (lowest 25%), high asthma counties
low_income_high_asthma <- all_data_geo %>% mutate(high_asthma = ifelse(total_rate > asthma_quartile_rates[4], 1, 0),
low_income = ifelse(med_hh_income < quantile_income[2], 1, 0),
low_income_high_asthma_value = high_asthma*low_income)
low_income_high_asthma_map <- tm_shape(low_income_high_asthma) +
tm_polygons(col = "low_income_high_asthma_value", id = "name", palette = "BuPu", style = "pretty",
border.col = "white", border.alpha = 0.5) +
tm_shape(low_income_high_asthma) + tm_borders(col = "black") +
tm_layout(panel.show = T, panel.labels = "Counties with High Asthma Rates and Low Median HH Income", legend.show = F)
## Set a quantile ranking to find places classified as the lowest and highest 25% of uninsurance
quantile_uninsured <- quantile(all_data$percent_uninsured, na.rm=T)%>% unname()
# quantile_uninsured
## Map highly uninsured (more than 25.5% uninsured), high asthma counties
high_uninsured_high_asthma <- all_data_geo %>% mutate(high_asthma = ifelse(total_rate > asthma_quartile_rates[4], 1, 0),
high_uninsured = ifelse(percent_uninsured > quantile_uninsured[2], 1, 0),
high_uninsured_high_asthma_value = high_asthma*high_uninsured)
high_uninsured_high_asthma_map <- tm_shape(high_uninsured_high_asthma) +
tm_polygons(col = "high_uninsured_high_asthma_value", id = "name", palette = "BuPu", style = "pretty",
border.col = "white", border.alpha = 0.5) +
tm_shape(high_uninsured_high_asthma) + tm_borders(col = "black") +
tm_layout(panel.show = T, panel.labels = "Counties with High Asthma Rates and are Highly Uninsured", legend.show = F)
## Map lowly uninsured (less than 25.5 uninsured), high asthma counties
low_uninsured_high_asthma <- all_data_geo %>% mutate(high_asthma = ifelse(total_rate > asthma_quartile_rates[4], 1, 0),
low_uninsured = ifelse(percent_uninsured < quantile_uninsured[2], 1, 0),
low_uninsured_high_asthma_value = high_asthma*low_uninsured)
low_uninsured_high_asthma_map <- tm_shape(low_uninsured_high_asthma) +
tm_polygons(col = "low_uninsured_high_asthma_value", id = "name", palette = "BuPu", style = "pretty",
border.col = "white", border.alpha = 0.5) +
tm_shape(low_uninsured_high_asthma) + tm_borders(col = "black") +
tm_layout(panel.show = T, panel.labels = "Counties with High Asthma Rates and are Lowly Uninsured", legend.show = F)
tmap_arrange(high_uninsured_high_asthma_map, low_uninsured_high_asthma_map)
## Clean nc_shp column names
nc_shp_asthma <- asthma %>% mutate(name = Residence %>% str_replace(" County, North Carolina","")) %>% left_join(nc_shp, by = "name") %>% st_sf()
nc_shp_asthma <- nc_shp_asthma %>% clean_names(case ="snake")
tmap_mode("plot")
## Arrange asthma map with lisa map
## Yellow shows counties that are in the range of mean asthma rate for North Carolina; blue shades show counties with asthma rates below the state mean; orange and red colors show counties with asthma rates above the state mean
hot_spot_sd <-tm_shape(county_sp) + tm_polygons(col = "total_rate", palette = "-RdYlBu", n= 6, style = "sd") + tm_shape(county_sp) + tm_borders(col = "black") +
tm_layout(panel.show = T, panel.labels = "Hotspots of Asthma Rates")
lisa_map <- tm_shape(county_lisa) + tm_polygons("Cat", style = "cat", palette = c("grey", "red", "pink", "lightblue", "blue"), border.col = "Black", border.alpha = 0.25)
tmap_arrange(hot_spot_sd, lisa_map)
```{r health_factors_boxplots, fig.height = 3, fig.width = 5}
## Create ggplot boxplots showing relationship between asthma rates and health factors
nc_health_tidy <- nc_health_tidy %>% clean_names
nc_health_tidy %>%
ggplot(aes( y = asthma_rate_levels, x = health_rates)) + geom_boxplot() + theme_minimal() +
geom_text(aes(label = name), check_overlap = T,
size = 2.0 ,color = "navy",
position = position_nudge(x = 0.2, y = 0.2)) + labs(x = "Health",
y = "Asthma Rate Level",
title = "The Impact of Health Factors on Asthma Rate Level ") +
facet_wrap(~ health, scales = "free_x", labeller=labeller(health = labels ), nrow = 3) +
theme_minimal() + theme(axis.text.y = element_text(size = 6))
```
## Create ggplot boxplots showing relationship between asthma rates and health factors
nc_health_tidy <- nc_health_tidy %>% clean_names
nc_health_tidy %>%
ggplot(aes( y = asthma_rate_levels, x = health_rates)) + geom_boxplot() + theme_minimal() +
geom_text(aes(label = name), check_overlap = T,
size = 2.0 ,color = "navy",
position = position_nudge(x = 0.2, y = 0.2)) + labs(x = "Health",
y = "Asthma Rate Level",
title = "The Impact of Health Factors on Asthma Rate Level ") +
facet_wrap(~ health, scales = "free_x", labeller=labeller(health = labels ), nrow = 3) +
theme_minimal() + theme(axis.text.y = element_text(size = 6))
## Create ggplot boxplots showing relationship between asthma rates and health factors
nc_health_tidy <- nc_health_tidy %>% clean_names
nc_health_tidy %>%
ggplot(aes( y = asthma_rate_levels, x = health_rates)) + geom_boxplot() + theme_minimal() +
geom_text(aes(label = name), check_overlap = T,
size = 2.0 ,color = "navy",
position = position_nudge(x = 0.2, y = 0.2)) + labs(x = "Health",
y = "Asthma Rate Level",
title = "The Impact of Health Factors on Asthma Rate Level ") +
facet_wrap(~ health, scales = "free_x", labeller=labeller(health = labels ), nrow = 3) +
theme_minimal() + theme(axis.text.y = element_text(size = 6))
```
## Create ggplot boxplots showing relationship between asthma rates and health factors
nc_health_tidy <- nc_health_tidy %>% clean_names
nc_health_tidy %>%
ggplot(aes( y = asthma_rate_levels, x = health_rates)) + geom_boxplot() + theme_minimal() +
geom_text(aes(label = name), check_overlap = T,
size = 2.0 ,color = "navy",
position = position_nudge(x = 0.2, y = 0.2)) + labs(x = "Health",
y = "Asthma Rate Level",
title = "The Impact of Health Factors on Asthma Rate Level ") +
facet_wrap(~ health, scales = "free_x", labeller=labeller(health = labels ), nrow = 3) +
theme_minimal() + theme(axis.text.y = element_text(size = 6))
## Create ggplot boxplots showing relationship between asthma rates and health factors
nc_health_tidy <- nc_health_tidy %>% clean_names
nc_health_tidy %>%
ggplot(aes( y = asthma_rate_levels, x = health_rates)) + geom_boxplot() + theme_minimal() +
geom_text(aes(label = name), check_overlap = T,
size = 2.0 ,color = "navy",
position = position_nudge(x = 0.2, y = 0.2)) + labs(x = "Health",
y = "Asthma Rate Level",
title = "The Impact of Health Factors on Asthma Rate Level ") +
facet_wrap(~ health, scales = "free_x", labeller=labeller(health = labels ), nrow = 3) +
theme_minimal() + theme(axis.text.y = element_text(size = 6))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
packageList <- c("tidycensus","sf","janitor","spdep", "plotly")
for(p in packageList){
if (!requireNamespace(p)) {
install.packages(p)
}
}
library(tidyverse)
library(sf)
library(janitor)
library(tidycensus)
library(readxl)
library(plotly)
## Obtain and set API Key
census_api_key(key = "ff9343eecb85d5044ee3800ae75cd82f2e41c0f6", install = TRUE, overwrite = TRUE)
## Load variables from API
v17 <- load_variables(2018, "acs5", cache = TRUE)
# head(v17)
## Filter by string
pop_cols <- v17 %>% filter(concept %>% str_detect("TOTAL POPULATION"))
# head(pop_cols)
## Get list of variables
pop_cols <- v17 %>% filter(concept %>% str_detect("^TOTAL POPULATION$"))
# head(pop_cols)
## Detect Not hispanic or latino
hisp_cols <- v17 %>% filter(concept %>% str_detect("HISPANIC OR LATINO")) %>%
filter(concept %>% str_detect("RACE")) %>%
filter(label %>% str_detect(fixed("not hispanic or latino",ignore_case = T)))
## Detect Median Household Income
inc_cols <- v17 %>% filter(concept %>% str_detect("MEDIAN HOUSEHOLD INCOME"))
## Find the code for Total Population (in the name column of pop_cols)
pop_tot_col <- pop_cols$name
pop_total_colname <- "Total Population"
race_col <- c("B03002_002","B03002_003","B03002_004","B03002_005") # Manually assign race column codes from the filtered hisp_cols df
race_colname <-c("Not Hispanic","White","Black","Native Americans")
## Manually assign race column codes from the filtered inccols df
inc_col <- "B19013_001"
## Provide Reasonable column name
inc_colname <- "Med HH income"
## Import Census data from tidycensus API based on list of variables
nc_raw <- get_acs(geography = "county",
variables = c(pop_tot_col, race_col, inc_col),
state = "NC",
year = 2018,
output = "wide")
## Remove unnecessary columns
nc_wide <- nc_raw %>% select(-ends_with("m"))
# glimpse(nc_wide)
## Clean variable names
colnames(nc_wide)[3:8] <- c(pop_total_colname,race_colname,inc_colname)
nc_wide <- nc_wide %>% clean_names(case ="snake")
# colnames(nc_wide)
## Create new variables of interest
nc_wide <- nc_wide %>% mutate(hispanic = total_population - not_hispanic,
poc = total_population - white,
white_majority = ifelse(white > poc, 1,0) %>%
recode_factor(`1` = 'white',
`0` = 'poc')) %>%
select(-not_hispanic)
# glimpse(nc_wide)
## Rearrange columns
nc_wide <- nc_wide %>% select(geoid,name,white:native_americans,
hispanic, poc, white_majority, total_population,
med_hh_income)
# glimpse(nc_wide)
## Tidy data
nc_tidy1 <- nc_wide %>% pivot_longer(names_to = "race",
values_to = "race_count",
cols = white:poc)
# glimpse(nc_tidy1)
## Transform data by finding percentage of race for each county
nc_tidy1 <- nc_tidy1 %>% mutate(race_pct = (race_count/total_population)*100)
# glimpse(nc_tidy1)
nc_tidy1$name <- nc_tidy1$name %>% str_replace(pattern = " County, North Carolina", replacement = "")
## nc_tidy1$name %>% head
nc_tidy1 %>% sample_n(5)
## Import asthma data
asthma <- read_excel("NC_asthma.xls", sheet = 1)
## Join asthma data with nc_wide
nc_wide$name <- nc_wide$name %>% str_replace(pattern = " County, North Carolina", replacement = "") # Make the county names in nc_wide consistent with asthma data
nc_wide_asthma_join <- left_join(nc_wide, asthma, by = c("name" = "Residence"))
nc_wide_asthma_join <- nc_wide_asthma_join %>% clean_names(case ="snake")
nc_wide_asthma_join %>% sample_n(5)
## Import county health data
county_health_data <- read_excel("2014CH.xls", sheet = 4, skip = 1)
## Clean and select the county health data relevant to our study
county_health_data %>% clean_names(case = "snake")
clean_HD <- county_health_data %>% select(County, average_daily_pm = "Average daily PM25", percent_uninsured = "% Uninsured", percent_physically_inactive = "% Physically Inactive", percent_access_to_exercise = "% With Access", percent_adult_smoking = "% Smokers" )
## Clean and tidy finalized county health data
tidy_HD <- clean_HD %>% filter(!is.na(County), !is.na(average_daily_pm), !is.na(percent_uninsured), !is.na(percent_physically_inactive), !is.na(percent_access_to_exercise), !is.na(percent_adult_smoking))
## Import physical environment data from county health dataset
physical_environment <- read_excel("2014CH.xls", sheet = 3, skip = 1)
## Clean and tidy physical environment data
physical_environment %>% clean_names(case = "snake")
clean_physical_environment <- physical_environment %>% select(County, physical_environment_zscore = "Z-Score...14" )
tidy_physical_environment <- clean_physical_environment %>% filter(!is.na(County), !is.na(physical_environment_zscore))
## Join physical environment quality factors with all_data
environment_quality <- left_join(tidy_HD, tidy_physical_environment, by = "County")
all_data <- left_join(nc_wide_asthma_join, environment_quality, by = c("name" = "County"))
all_data %>% sample_n(5)
## Tidy health data
nc_health_tidy <- all_data %>% pivot_longer(names_to = "health",
values_to = "health_rates",
cols = average_daily_pm: physical_environment_zscore)
## Tidy race data
nc_race_tidy <- all_data %>% pivot_longer(names_to = "race",
values_to = "race_count",
cols = white: poc)
nc_race_tidy <- nc_race_tidy %>% mutate(race_pct = race_count/ total_population * 100)
## Import NC_counties geospatial info
require(sf)
NC_counties <- read_sf(dsn = ".", layer = "NC_counties")
## Change data to snake case for ease of join
# colnames(NC_counties)[1:10]
nc_shp <- NC_counties %>% clean_names(case ="snake") # snake case makes everything lower case and replaces spaces with `_`
## Join geospatial data to the all_data dataset
nc_shp <- nc_shp %>% select(name = co_name, geometry) %>%
mutate(name = name %>% str_to_title())
all_data_geo <- all_data %>% mutate(name = name %>% str_replace(" County, North Carolina","")) %>% left_join(nc_shp, by = "name") %>% st_sf()
# nrow(all_data_geo)
asthma_rank <- all_data %>% select(name, total_rate) %>% arrange(desc(total_rate))
asthma_rank %>% top_n(10)
library(RColorBrewer)
library(tmap)
library(units)
## Map asthma rates
asthma_rates_map <- tm_shape(all_data_geo) +
tm_polygons(col = "total_rate", palette = "BuPu", style = "quantile",
border.col = "white", border.alpha = 0.5) +
tm_shape(all_data_geo) + tm_borders(col = "black") +
tm_layout(panel.show = T, panel.labels = "Asthma Rate Levels in NC", title.size = 1, legend.outside = T)
asthma_rates_map
## Remove z-score and particulate matter data from dataset
nc_health_tidy_percent <- all_data %>% pivot_longer(names_to = "health",
values_to = "health_rates",
cols = percent_uninsured:percent_adult_smoking)
nc_health_tidy_percent <- nc_health_tidy_percent %>% mutate(name = name %>% str_replace(" County, North Carolina","")) %>% left_join(nc_shp, by = "name") %>% st_sf()
## Map physical environment z-scores by county
physical_environment_breaks <- quantile(nc_health_tidy_percent$physical_environment_zscore, na.rm=T) %>% unname()
all_data_geo %>%
mutate(n_breaks = cut(physical_environment_zscore, breaks = physical_environment_breaks, include.lowest = T,
right = F)) %>%
ggplot(aes(fill=n_breaks)) + geom_sf() + ggtitle("Physical Environment Z-Score in NC by County") +
scale_fill_brewer(type = "seq",palette = "Oranges") + theme_bw()
## Map health rates of each health factor per county
facet_health_breaks <- quantile(nc_health_tidy_percent$health_rates, na.rm=T) %>% unname()
nc_health_tidy_percent %>%
mutate(n_breaks = cut(health_rates, breaks = facet_health_breaks, include.lowest = T,
right = F)) %>%
ggplot(aes(fill=n_breaks)) + geom_sf() + facet_wrap(~health) +
ggtitle("Health Rates in NC by County") +
scale_fill_brewer(type = "seq",palette = "Oranges") + theme_bw()
asthma_quartile_rates <- quantile(all_data$total_rate, na.rm=T)%>% unname()
# asthma_quartile_rates
# Classify asthma levels as low, moderate, or high based on quartile system
nc_health_tidy <- nc_health_tidy %>% clean_names %>%
mutate(asthma_rate_levels = ifelse(total_rate < asthma_quartile_rates[2], "Low",
ifelse(total_rate >= asthma_quartile_rates[2] & total_rate < asthma_quartile_rates[4], "Moderate",
ifelse(total_rate > asthma_quartile_rates[4], "High", "No Data"
))))
nc_health_tidy <- nc_health_tidy %>% mutate(asthma_rate_levels = asthma_rate_levels %>% factor( levels=c("Low", "Moderate", "High"), ordered = TRUE))
library(tidyverse)
## Display distribution of median HH income and Asthma shown using boxplot
boxp <- nc_health_tidy %>%
ggplot(aes(x = asthma_rate_levels, y = med_hh_income)) +
geom_boxplot() +
theme_minimal()
boxp + geom_text(aes(label = name), check_overlap = T,
size = 2.0 ,color = "navy",
position = position_nudge(x = 0.2, y = 0.2)) +
labs(x = "Asthma Level",
y = "Median Household Income",
title = "Distribution of Median HH Income and Asthma Levels in NC Counties")
## Display distribution of asthma rates and racial composition in NC counties shown using boxplot
boxp_major <- all_data %>%
ggplot(aes(x = white_majority, y = total_rate)) +
geom_boxplot() +
theme_minimal()
boxp_major + geom_text(aes(label = name), check_overlap = T,
size = 2.0 ,color = "navy",
position = position_nudge(x = 0.2, y = 0.2)) +
labs(x = "White or POC Majority",
y = "Asthma Rate",
title = "Distribution of Asthma Rates and Racial Composition in NC Counties")
## Set labels for each health factor
labels <- c(average_daily_pm = "Average Daily PM 2.5", percent_uninsured = "The Percent of Individuals Who Are Uninsured", percent_physically_inactive = "The Percent of People Who Are Not Physically Active", percent_access_to_exercise = "Percent of People Who Have Access to Exercise", percent_adult_smoking = "Percent of Adults Who Smoke", physical_environment_zscore = "The Z-score for Physical Environment")
## Clean label names and create ggplot scatterplots showing relationship between asthma rates and health factors
nc_health_tidy <- nc_health_tidy %>% clean_names
nc_health_tidy %>%
ggplot(aes( y = total_rate, x = health_rates)) +
geom_point(color = "maroon") + labs(x = "Health",
y = "Asthma Rates",
title = "The Impact of Health Factors on Asthma Rates ") +
geom_smooth() +
facet_wrap(~ health, scales = "free_x", labeller=labeller(health = labels ), nrow = 3) +
theme_minimal() + theme(axis.text.y = element_text(size = 6))
## Create ggplot boxplots showing relationship between asthma rates and health factors
nc_health_tidy %>%
ggplot(aes( y = asthma_rate_levels, x = health_rates)) + geom_boxplot() + theme_minimal() +
geom_text(aes(label = name), check_overlap = T,
size = 2.0 ,color = "navy",
position = position_nudge(x = 0.2, y = 0.2)) + labs(x = "Health",
y = "Asthma Rate Level",
title = "The Impact of Health Factors on Asthma Rate Level ") +
facet_wrap(~ health, scales = "free_x", labeller=labeller(health = labels ), nrow = 3) +
theme_minimal() + theme(axis.text.y = element_text(size = 6))
## Create scatterplots finding relationship between race and asthma
nc_race_tidy %>%
ggplot(aes( y = total_rate, x = race_pct)) +
geom_point(color = "maroon") + labs(x = "Race Count",
y = "Asthma Rates",
title = "Race and Asthma Rates ") +
ylim(c(0,400))+
geom_smooth() +
facet_wrap(~ race, scales = "free_x", nrow = 3) +
theme_minimal() + theme(axis.text.y = element_text(size = 6))
## Create ggplot scatter plot finding relationship between asthma rates and median househould income
asthma_income <- all_data %>% clean_names
asthma_income %>%
ggplot(aes( y = total_rate, x = med_hh_income)) +geom_point() + labs(x = "Median Household Income",
y = "Asthma Rates",
title = "The Impact of Median Household Income on Asthma Rates ") + theme_minimal() + theme(axis.text.y = element_text(size = 6)) +geom_smooth()
## Set a quantile ranking to find places classified as the lowest and highest 25% of median HH income
quantile_income <- quantile(all_data$med_hh_income, na.rm=T)%>% unname()
# quantile_income
# Classify income levels as low, moderate, or high based on quartile system
nc_health_tidy <- nc_health_tidy %>% clean_names %>%
mutate(income_levels = ifelse(med_hh_income < quantile_income[2], "Low",
ifelse(med_hh_income >= quantile_income[2] & med_hh_income < quantile_income[4], "Moderate",
ifelse(med_hh_income > quantile_income[4], "High", "No Data"
))))
nc_health_tidy <- nc_health_tidy %>% mutate(income_levels = income_levels %>% factor( levels=c("Low", "Moderate", "High"), ordered=TRUE))
tmap_mode("view")
## Map low income (lowest 25%), high asthma counties
low_income_high_asthma <- all_data_geo %>% mutate(high_asthma = ifelse(total_rate > asthma_quartile_rates[4], 1, 0),
low_income = ifelse(med_hh_income < quantile_income[2], 1, 0),
low_income_high_asthma_value = high_asthma*low_income)
low_income_high_asthma_map <- tm_shape(low_income_high_asthma) +
tm_polygons(col = "low_income_high_asthma_value", id = "name", palette = "BuPu", style = "pretty",
border.col = "white", border.alpha = 0.5) +
tm_shape(low_income_high_asthma) + tm_borders(col = "black") +
tm_layout(panel.show = T, panel.labels = "Counties with High Asthma Rates and Low Median HH Income", legend.show = F)
## Map high income (top 25%), high asthma rate counties (higher than 93% rate)
high_income_high_asthma <- all_data_geo %>% mutate(high_asthma = ifelse(total_rate > asthma_quartile_rates[4], 1, 0),
high_income = ifelse(med_hh_income >quantile_income[4], 1, 0),
high_income_high_asthma_value = high_asthma*high_income)
high_income_high_asthma_map <- tm_shape(high_income_high_asthma) +
tm_polygons(col = "high_income_high_asthma_value", id = "name", palette = "BuPu", style = "pretty",
border.col = "white", border.alpha = 0.5) +
tm_shape(high_income_high_asthma) + tm_borders(col = "black") +
tm_layout(panel.show = T, panel.labels = "Counties with High Asthma Rates and High Median HH Income", legend.show = F)
tmap_arrange(low_income_high_asthma_map, high_income_high_asthma_map)
## Set a quantile ranking to find places classified as the lowest and highest 25% of uninsurance
quantile_uninsured <- quantile(all_data$percent_uninsured, na.rm=T)%>% unname()
# quantile_uninsured
## Map highly uninsured (more than 25.5% uninsured), high asthma counties
high_uninsured_high_asthma <- all_data_geo %>% mutate(high_asthma = ifelse(total_rate > asthma_quartile_rates[4], 1, 0),
high_uninsured = ifelse(percent_uninsured > quantile_uninsured[2], 1, 0),
high_uninsured_high_asthma_value = high_asthma*high_uninsured)
high_uninsured_high_asthma_map <- tm_shape(high_uninsured_high_asthma) +
tm_polygons(col = "high_uninsured_high_asthma_value", id = "name", palette = "BuPu", style = "pretty",
border.col = "white", border.alpha = 0.5) +
tm_shape(high_uninsured_high_asthma) + tm_borders(col = "black") +
tm_layout(panel.show = T, panel.labels = "Counties with High Asthma Rates and are Highly Uninsured", legend.show = F)
## Map lowly uninsured (less than 25.5 uninsured), high asthma counties
low_uninsured_high_asthma <- all_data_geo %>% mutate(high_asthma = ifelse(total_rate > asthma_quartile_rates[4], 1, 0),
low_uninsured = ifelse(percent_uninsured < quantile_uninsured[2], 1, 0),
low_uninsured_high_asthma_value = high_asthma*low_uninsured)
low_uninsured_high_asthma_map <- tm_shape(low_uninsured_high_asthma) +
tm_polygons(col = "low_uninsured_high_asthma_value", id = "name", palette = "BuPu", style = "pretty",
border.col = "white", border.alpha = 0.5) +
tm_shape(low_uninsured_high_asthma) + tm_borders(col = "black") +
tm_layout(panel.show = T, panel.labels = "Counties with High Asthma Rates and are Lowly Uninsured", legend.show = F)
tmap_arrange(high_uninsured_high_asthma_map, low_uninsured_high_asthma_map)
## Clean nc_shp column names
nc_shp_asthma <- asthma %>% mutate(name = Residence %>% str_replace(" County, North Carolina","")) %>% left_join(nc_shp, by = "name") %>% st_sf()
nc_shp_asthma <- nc_shp_asthma %>% clean_names(case ="snake")
tmap_mode("plot")
library(spdep)
## Convert sf to sp file
county_sp <- as(nc_shp_asthma,"Spatial")
cnty_coords <- coordinates(county_sp)
## Analyze and define nearest neighbors (constructs list, looks at distribution of neighbors) based on Queen's 1
q1 <- poly2nb(county_sp, queen=TRUE)
# summary(q1)
## Get the cardinality - or the number of neighbors for each observation; this will help us gauge whether our observations have a reasonable distribution of neighbors for calculation. Ideally, we want the distribution to symmetric (close to normal) with a limited range.
## card(q1) %>% tibble(n = .) %>% ggplot(aes(x = n)) +
##   geom_histogram(col="white") + theme_minimal()
## plot(nc_shp$geometry, lwd = 0.2)
## plot(q1, cnty_coords, col='red', lwd=0.2, cex = 0.5, add = TRUE)
## Calculate spatial weights
q1w <-  nb2listw(q1, style = "W", zero.policy = FALSE)
## Find all neighbors within a critical threshold so that there are no values with 0 neighbors
## Calculate the nearest neighbor for each value
## Use longlat = T when data is in a geographic coordinate system. This calculates a great circle distance in kms
## Calculate the max distance between 2 centroids as critical threshold
critical.threshold <- max(unlist(nbdists(q1,cnty_coords, longlat = T)))
## Calculate neighbors within the critical threshold
nb.dist.band <- dnearneigh(cnty_coords, 0, critical.threshold, longlat = T)
distances <- nbdists(nb.dist.band,cnty_coords,longlat = T)
# distances[1]
invd1 <- lapply(distances, function(x) (1/x))
invd1a <- lapply(distances, function(x) (1/(x/100)))
# invd1a[1]
invd.weights <- nb2listw(nb.dist.band,glist = invd1a,style = "B")
# summary(invd.weights)
## Find nearest 8 neighbors
k8 <- knn2nb(knearneigh(cnty_coords, k = 8))
# plot(k6, cnty_coords, lwd=.2, col="blue", cex = .5)
weights.knn <- nb2listw(k8,glist = k8,style = "B")
## Nearest 8 neighbors but inversely weighted
k8 <- knn2nb(knearneigh(cnty_coords, k = 8,longlat = T))
k.distances <- nbdists(k8, cnty_coords, longlat = T)
invd2a <- lapply(k.distances, function(x) (1/(x/100)))
invd.weights.knn <- nb2listw(k8,glist = invd2a,style = "B")
# invd.weights.knn$weights[1]
q1_invd_lisa <- as.data.frame(localmoran(county_sp$total_rate, invd.weights.knn, zero.policy = FALSE))
q1_invd_lisa$Cat <- rep("0", nrow(q1_invd_lisa))
## Scale the input data to mean
cDV <- county_sp$total_rate - mean(county_sp$total_rate)
# Get spatial lag values for each observation
lagDV <- lag.listw(q1w, county_sp$total_rate)
## Scale the lag values
clagDV <- lagDV - mean(lagDV, na.rm = TRUE)
## Simply add a label based on the values
q1_invd_lisa$Cat[which(cDV > 0 & clagDV > 0 & q1_invd_lisa[,5] < 0.05)] <- "HH"
q1_invd_lisa$Cat[which(cDV < 0 & clagDV < 0 & q1_invd_lisa[,5] < 0.05)] <- "LL"
q1_invd_lisa$Cat[which(cDV < 0 & clagDV > 0 & q1_invd_lisa[,5] < 0.05)] <- "LH"
q1_invd_lisa$Cat[which(cDV > 0 & clagDV < 0 & q1_invd_lisa[,5] < 0.05)] <- "HL"
# Quick summary of LISA output
# table(q1_invd_lisa$Cat)
county_lisa <- nc_shp_asthma %>% bind_cols(q1_invd_lisa)
## tm_shape(county_lisa) + tm_polygons("Cat", style = "cat", palette = c("grey", "red", "pink", "lightblue", "blue"), border.col = "Black", border.alpha = 0.25)
## Calculate Moran's I
mor_q1 <- moran.mc(x = county_sp$total_rate, listw = invd.weights.knn, zero.policy = FALSE, nsim = 5000, adjust.n = T)
mor_q1
## Arrange asthma map with lisa map
## Yellow shows counties that are in the range of mean asthma rate for North Carolina; blue shades show counties with asthma rates below the state mean; orange and red colors show counties with asthma rates above the state mean
hot_spot_sd <-tm_shape(county_sp) + tm_polygons(col = "total_rate", palette = "-RdYlBu", n= 6, style = "sd") + tm_shape(county_sp) + tm_borders(col = "black") +
tm_layout(panel.show = T, panel.labels = "Hotspots of Asthma Rates")
lisa_map <- tm_shape(county_lisa) + tm_polygons("Cat", style = "cat", palette = c("grey", "red", "pink", "lightblue", "blue"), border.col = "Black", border.alpha = 0.25)
tmap_arrange(hot_spot_sd, lisa_map)
## Create ggplot boxplots showing relationship between asthma rates and health factors
nc_health_tidy %>%
ggplot(aes( y = asthma_rate_levels, x = health_rates)) + geom_boxplot() + theme_minimal() +
geom_text(aes(label = name), check_overlap = T,
size = 2.0 ,color = "navy",
position = position_nudge(x = 0.2, y = 0.2)) + labs(x = "Health",
y = "Asthma Rate Level",
title = "The Impact of Health Factors on Asthma Rate Level ") +
facet_wrap(~ health, scales = "free_x", labeller=labeller(health = labels), nrow = 3) +
theme_minimal() + theme(axis.text.y = element_text(size = 6))
## Create ggplot boxplots showing relationship between asthma rates and health factors
nc_health_tidy %>%
ggplot(aes( y = asthma_rate_levels, x = health_rates)) + geom_boxplot() + theme_minimal() +
geom_text(aes(label = name), check_overlap = T,
size = 2.0 ,color = "navy",
position = position_nudge(x = 0.2, y = 0.2)) + labs(x = "Health",
y = "Asthma Rate Level",
title = "The Impact of Health Factors on Asthma Rate Level") +
facet_wrap(~ health, scales = "free_x", labeller=labeller(health = labels), nrow = 3) +
theme_minimal() + theme(axis.text.y = element_text(size = 6))
## Create ggplot boxplots showing relationship between asthma rates and health factors
nc_health_tidy %>%
ggplot(aes( y = asthma_rate_levels, x = health_rates)) + geom_boxplot() + theme_minimal() +
geom_text(aes(label = name), check_overlap = T,
size = 2.0 ,color = "navy",
position = position_nudge(x = 0.2, y = 0.2)) + labs(x = "Health",
y = "Asthma Rate Level",
title = "The Impact of Health Factors on Asthma Rate Level") +
facet_wrap(~ health, scales = "free_x", labeller=labeller(health = labels), nrow = 3) +
theme_minimal() + theme(axis.text.y = element_text(size = 6))
labels <- c(average_daily_pm = "Average Daily PM 2.5", percent_uninsured = "The Percent of Individuals Who are Uninsured", percent_physically_inactive = "The Percent of People Who are Not Physically Active", percent_access_to_exercise = "Percent of People Who Have Access to Exercise", percent_adult_smoking = "Percent of Adults Who Smoke", physical_environment_zscore = "The Z-Score for Physical Environment")
nc_health_tidy <- nc_health_tidy %>% clean_names
nc_health_tidy %>%
ggplot(aes( y = asthma_rate_levels, x = health_rates)) + geom_boxplot() + theme_minimal() +
geom_text(aes(label = name), check_overlap = T,
size = 2.0 ,color = "navy",
position = position_nudge(x = 0.2, y = 0.2)) + labs(x = "Health",
y = "Asthma Rate Level",
title = "The Impact of Health Factors on Asthma Rate Level ") +
facet_wrap(~ health, scales = "free_x", labeller=labeller(health = labels ), nrow = 3) +
theme_minimal() + theme(axis.text.y = element_text(size = 6))
labels <- c(average_daily_pm = "Average Daily PM 2.5", percent_uninsured = "The Percent of Individuals Who are Uninsured", percent_physically_inactive = "The Percent of People Who are Not Physically Active", percent_access_to_exercise = "Percent of People Who Have Access to Exercise", percent_adult_smoking = "Percent of Adults Who Smoke", physical_environment_zscore = "The Z-Score for Physical Environment")
nc_health_tidy <- nc_health_tidy %>% clean_names
nc_health_tidy %>%
ggplot(aes( y = asthma_rate_levels, x = health_rates)) + geom_boxplot() + theme_minimal() +
geom_text(aes(label = name), check_overlap = T,
size = 2.0 ,color = "navy",
position = position_nudge(x = 0.2, y = 0.2)) + labs(x = "Health",
y = "Asthma Rate Level",
title = "The Impact of Health Factors on Asthma Rate Level ") +
facet_wrap(~ health, scales = "free_x", labeller=labeller(health = labels ), nrow = 3) +
theme_minimal() + theme(axis.text.y = element_text(size = 6))
labels <- c(average_daily_pm = "Average Daily PM 2.5", percent_uninsured = "The Percent of Individuals Who are Uninsured", percent_physically_inactive = "The Percent of People Who are Not Physically Active", percent_access_to_exercise = "Percent of People Who Have Access to Exercise", percent_adult_smoking = "Percent of Adults Who Smoke", physical_environment_zscore = "The Z-Score for Physical Environment")
nc_health_tidy <- nc_health_tidy %>% clean_names
nc_health_tidy %>%
ggplot(aes( y = asthma_rate_levels, x = health_rates)) + geom_boxplot() + theme_minimal() +
geom_text(aes(label = name), check_overlap = T,
size = 2.0 ,color = "navy",
position = position_nudge(x = 0.2, y = 0.2)) + labs(x = "Health",
y = "Asthma Rate Level",
title = "The Impact of Health Factors on Asthma Rate Level ") +
facet_wrap(~ health, scales = "free_x", labeller = labeller(health = labels ), nrow = 3) +
theme_minimal() + theme(axis.text.y = element_text(size = 6))
